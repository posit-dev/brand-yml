[{"path":"https://posit-dev.github.io/brand-yml/pkg/r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 brand.yml authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Garrick Aden-Buie. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aden-Buie G (2025). brand.yml: Unified Branding Simple YAML File. R package version 0.0.0.9000, https://posit-dev.github.io/brand-yml/pkg/r.","code":"@Manual{,   title = {brand.yml: Unified Branding with a Simple YAML File},   author = {Garrick Aden-Buie},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://posit-dev.github.io/brand-yml/pkg/r}, }"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/index.html","id":"brandyml","dir":"","previous_headings":"","what":"Unified Branding with a Simple YAML File","title":"Unified Branding with a Simple YAML File","text":"Centralize brand guidelines single ‘brand.yml’ file, enabling consistent theming across Quarto, Shiny, R applications, reports, presentations minimal configuration.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Unified Branding with a Simple YAML File","text":"can install development version brand.yml GitHub : Alternatively, can install posit-dev.r-universe.dev :","code":"# install.packages(\"pak\") pak::pak(\"posit-dev/brand-yml/pkg-r\") install.packages(   'brand.yml',   repos = c('https://posit-dev.r-universe.dev', 'https://cloud.r-project.org') )"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Unified Branding with a Simple YAML File","text":"Use read_brand_yml() read brand.yml file validated consistent R list. can provide path local file, read_brand_yml() look _brand.yml file project.","code":"library(brand.yml)  brand <- read_brand_yml(   system.file(\"examples\", \"brand-posit.yml\", package = \"brand.yml\") )  brand$color |> str() #> List of 12 #>  $ palette   :List of 7 #>   ..$ blue    : chr \"#447099\" #>   ..$ orange  : chr \"#EE6331\" #>   ..$ gray    : chr \"#404041\" #>   ..$ white   : chr \"#FFFFFF\" #>   ..$ teal    : chr \"#419599\" #>   ..$ green   : chr \"#72994E\" #>   ..$ burgundy: chr \"#9A4665\" #>  $ foreground: chr \"#151515\" #>  $ background: chr \"#FFFFFF\" #>  $ primary   : chr \"#447099\" #>  $ secondary : chr \"#707073\" #>  $ tertiary  : chr \"#C2C2C4\" #>  $ success   : chr \"#72994E\" #>  $ info      : chr \"#419599\" #>  $ warning   : chr \"#EE6331\" #>  $ danger    : chr \"#9A4665\" #>  $ light     : chr \"#FFFFFF\" #>  $ dark      : chr \"#404041\""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/as_brand_yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Brand instance from a list or character vector. — as_brand_yml","title":"Create a Brand instance from a list or character vector. — as_brand_yml","text":"Create Brand instance list character vector.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/as_brand_yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Brand instance from a list or character vector. — as_brand_yml","text":"","code":"as_brand_yml(brand)"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/as_brand_yml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Brand instance from a list or character vector. — as_brand_yml","text":"brand list string YAML representing brand, path brand.yml file.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/as_brand_yml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Brand instance from a list or character vector. — as_brand_yml","text":"normalized brand_yml list.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/as_brand_yml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Brand instance from a list or character vector. — as_brand_yml","text":"","code":"as_brand_yml(\" meta:   name: Example Brand  color:   primary: '#FF5733'   secondary: '#33FF57' \") #> ## _brand.yml #> meta: #>   name: #>     short: Example Brand #>     full: Example Brand #> color: #>   primary: '#FF5733' #>   secondary: '#33FF57' #>   as_brand_yml(list(   meta = list(name = \"Example Brand\"),   color = list(primary = \"#FF5733\", secondary = \"#33FF57\") )) #> ## _brand.yml #> meta: #>   name: #>     short: Example Brand #>     full: Example Brand #> color: #>   primary: '#FF5733' #>   secondary: '#33FF57' #>"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand.yml-package.html","id":null,"dir":"Reference","previous_headings":"","what":"brand.yml: Unified Branding with a Simple YAML File — brand.yml-package","title":"brand.yml: Unified Branding with a Simple YAML File — brand.yml-package","text":"Read process 'brand.yml' 'YAML' files. 'brand.yml' simple, portable YAML file codifies company's brand guidelines format can used 'Quarto', 'Shiny' R tooling create branded outputs. Maintain unified, branded theming web applications printed reports dashboards presentations consistent look feel.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand.yml-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"brand.yml: Unified Branding with a Simple YAML File — brand.yml-package","text":"Maintainer: Garrick Aden-Buie garrick@posit.co (ORCID) contributors: Posit Software, PBC (03wc8by49) [copyright holder, funder]","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_color_pluck.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a color value from a brand object — brand_color_pluck","title":"Extract a color value from a brand object — brand_color_pluck","text":"Safely extracts color value brand object based provided key. function handles color references resolves , including references palette colors theme colors. detects prevents cyclic references.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_color_pluck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a color value from a brand object — brand_color_pluck","text":"","code":"brand_color_pluck(brand, key)"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_color_pluck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a color value from a brand object — brand_color_pluck","text":"brand brand object created read_brand_yml() as_brand_yml(). key character string representing color key extract.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_color_pluck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a color value from a brand object — brand_color_pluck","text":"resolved color value (typically hex color code) key exists, otherwise returns key .","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_color_pluck.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract a color value from a brand object — brand_color_pluck","text":"function checks color key main color theme color palette. can resolve references colors (e.g., \"primary\" references \"palette.blue\"). cyclic reference detected (e.g., references B references ), function throw error.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_color_pluck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a color value from a brand object — brand_color_pluck","text":"","code":"brand <- as_brand_yml(list(   color = list(     primary = \"blue\",     secondary = \"info\",     info = \"light-blue\",     palette = list(       blue = \"#004488\",       light_blue = \"#c3ddff\"     )   ) ))  # Extract the primary color brand_color_pluck(brand, \"primary\") # \"#004488\" #> [1] \"#004488\"  # Extract a color that references another color brand_color_pluck(brand, \"info\") # \"#c3ddff\" #> [1] \"#c3ddff\"  # Extract a color that references another color # which in turn references the palette brand_color_pluck(brand, \"secondary\") # \"#c3ddff\" #> [1] \"#c3ddff\"  # Extract a color that isn't defined brand_color_pluck(brand, \"green\") # \"green\" #> [1] \"green\"  # Use brand_pluck() if you need direct (resolved) values brand_pluck(brand, \"color\", \"primary\") # \"#004488\" #> [1] \"#004488\" brand_pluck(brand, \"color\", \"info\") # \"#c3ddff\" #> [1] \"#c3ddff\" brand_pluck(brand, \"color\", \"green\") # NULL #> NULL"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_has.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a brand has a specific nested element — brand_has","title":"Check if a brand has a specific nested element — brand_has","text":"Checks given brand object specific nested element accessible via additional arguments provided key paths.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_has.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a brand has a specific nested element — brand_has","text":"","code":"brand_has(brand, ...)"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_has.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a brand has a specific nested element — brand_has","text":"brand brand object created read_brand_yml() as_brand_yml(). ... One character strings symbols representing path nested element check.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_has.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a brand has a specific nested element — brand_has","text":"TRUE nested element exists brand object, FALSE otherwise.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_has.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a brand has a specific nested element — brand_has","text":"","code":"brand <- as_brand_yml(list(   meta = list(name = \"Example Brand\"),   color = list(primary = \"#FF5733\") ))  # Check if brand has a primary color brand_has(brand, \"color\", \"primary\") # TRUE #> [1] TRUE  # Check if brand has a secondary color brand_has(brand, \"color\", \"secondary\") # FALSE #> [1] FALSE"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_pluck.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a nested element from a brand object — brand_pluck","title":"Extract a nested element from a brand object — brand_pluck","text":"Safely extracts nested element brand object using provided key path. Returns NULL element exist.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_pluck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a nested element from a brand object — brand_pluck","text":"","code":"brand_pluck(brand, ...)"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_pluck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a nested element from a brand object — brand_pluck","text":"brand brand object created read_brand_yml() as_brand_yml(). ... One character strings symbols representing path nested element extract.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_pluck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a nested element from a brand object — brand_pluck","text":"value nested element exists, NULL otherwise.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_pluck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a nested element from a brand object — brand_pluck","text":"","code":"brand <- as_brand_yml(list(   meta = list(name = \"Example Brand\"),   color = list(primary = \"#FF5733\") ))  # Extract the primary color brand_pluck(brand, \"color\", \"primary\") # \"#FF5733\" #> [1] \"#FF5733\"  # Try to extract a non-existent element brand_pluck(brand, \"color\", \"secondary\") # NULL #> NULL"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Sass variables for brand colors — brand_sass_color","title":"Generate Sass variables for brand colors — brand_sass_color","text":"Creates Sass variables brand colors brand_color_ prefix. Excludes color palette handled brand_sass_color_palette().","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Sass variables for brand colors — brand_sass_color","text":"","code":"brand_sass_color(brand)"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Sass variables for brand colors — brand_sass_color","text":"brand list string YAML representing brand, path brand.yml file.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Sass variables for brand colors — brand_sass_color","text":"list one component: defaults: Sass variable definitions !default flag","code":""},{"path":[]},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Sass variables for brand colors — brand_sass_color","text":"","code":"brand <- list(   color = list(     primary = \"#007bff\",     danger = \"#dc3545\"   ) )  brand_sass_color(brand) #> $defaults #> $defaults$brand_color_primary #> [1] \"#007bff !default\" #>  #> $defaults$brand_color_danger #> [1] \"#dc3545 !default\" #>  #>"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_color_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Sass variables and CSS custom properties for brand color palette — brand_sass_color_palette","title":"Generate Sass variables and CSS custom properties for brand color palette — brand_sass_color_palette","text":"Converts color palette entries brand object Sass variables brand- prefix CSS custom properties --brand- prefix.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_color_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Sass variables and CSS custom properties for brand color palette — brand_sass_color_palette","text":"","code":"brand_sass_color_palette(brand)"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_color_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Sass variables and CSS custom properties for brand color palette — brand_sass_color_palette","text":"brand list string YAML representing brand, path brand.yml file.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_color_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Sass variables and CSS custom properties for brand color palette — brand_sass_color_palette","text":"list two components: defaults: Sass variable definitions !default flag rules: CSS rules define custom properties :root","code":""},{"path":[]},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_color_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Sass variables and CSS custom properties for brand color palette — brand_sass_color_palette","text":"","code":"brand <- list(   color = list(     palette = list(       primary = \"#007bff\",       secondary = \"#6c757d\"     )   ) )  brand_sass_color_palette(brand) #> $defaults #> $defaults$`brand-primary` #> [1] \"#007bff !default\" #>  #> $defaults$`brand-secondary` #> [1] \"#6c757d !default\" #>  #>  #> $rules #> [1] \":root { --brand-primary:#007bff;--brand-secondary:#6c757d; }\" #>"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_defaults_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Sass variables and layer for Bootstrap defaults — brand_sass_defaults_bootstrap","title":"Generate Sass variables and layer for Bootstrap defaults — brand_sass_defaults_bootstrap","text":"Creates Sass variables sass layer Bootstrap defaults defined brand object. Allows overriding defaults sources like Shiny themes.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_defaults_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Sass variables and layer for Bootstrap defaults — brand_sass_defaults_bootstrap","text":"","code":"brand_sass_defaults_bootstrap(brand, overrides = \"shiny.theme\")"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_defaults_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Sass variables and layer for Bootstrap defaults — brand_sass_defaults_bootstrap","text":"brand list string YAML representing brand, path brand.yml file. overrides Path override defaults, e.g., \"shiny.theme\"","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_defaults_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Sass variables and layer for Bootstrap defaults — brand_sass_defaults_bootstrap","text":"list two components: defaults: Sass variable definitions !default flag layer: sass_layer object functions, mixins, rules","code":""},{"path":[]},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_defaults_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Sass variables and layer for Bootstrap defaults — brand_sass_defaults_bootstrap","text":"","code":"brand <- list(   defaults = list(     bootstrap = list(       defaults = list(         primary = \"#007bff\",         enable_rounded = TRUE       ),       functions = \"@function brand-function() { @return true; }\"     ),     shiny = list(       theme = list(         defaults = list(           primary = \"#428bca\"  # Override bootstrap primary         )       )     )   ) )  brand_sass_defaults_bootstrap(brand) #> $defaults #> $defaults$enable_rounded #> [1] \"true !default\" #>  #> $defaults$primary #> [1] \"#428bca !default\" #>  #>  #> $layer #> /* Sass Bundle */ #> @function brand-function() { @return true; } #> /* *** */ #>"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Sass variables and CSS rules for brand fonts — brand_sass_fonts","title":"Generate Sass variables and CSS rules for brand fonts — brand_sass_fonts","text":"Creates Sass variables CSS rules fonts defined brand object. Supports Google fonts, Bunny fonts, file-based fonts.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Sass variables and CSS rules for brand fonts — brand_sass_fonts","text":"","code":"brand_sass_fonts(brand)"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_fonts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Sass variables and CSS rules for brand fonts — brand_sass_fonts","text":"brand list string YAML representing brand, path brand.yml file.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_fonts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Sass variables and CSS rules for brand fonts — brand_sass_fonts","text":"list two components: defaults: Sass variables font definitions rules: CSS rules applying fonts via classes","code":""},{"path":[]},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_fonts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Sass variables and CSS rules for brand fonts — brand_sass_fonts","text":"","code":"brand <- list(   typography = list(     fonts = list(       list(         family = \"Roboto\",         source = \"google\",         weight = c(400, 700),         style = \"normal\"       )     )   ) )  brand_sass_fonts(brand) #> $defaults #> $defaults$`brand-font-roboto` #> $families #> [1] \"Roboto\" #>  #> $html_deps #> function ()  #> dep_func(x) #> <bytecode: 0x5624e2bf19d0> #> <environment: 0x5624e1b99ab0> #> attr(,\"class\") #> [1] \"shiny.tag.function\" #>  #> $default_flag #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"font_collection\" \"list\"            #>  #>  #> $rules #> $rules[[1]] #> [1] \".brand-font-roboto { font-family: $brand-font-roboto; }\" #>  #>"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_typography.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Sass variables for brand typography — brand_sass_typography","title":"Generate Sass variables for brand typography — brand_sass_typography","text":"Creates Sass variables typography settings brand_typography_ prefix. Font size values pixels converted rem units, color references resolved.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_typography.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Sass variables for brand typography — brand_sass_typography","text":"","code":"brand_sass_typography(brand)"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_typography.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Sass variables for brand typography — brand_sass_typography","text":"brand list string YAML representing brand, path brand.yml file.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_typography.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Sass variables for brand typography — brand_sass_typography","text":"list one component: defaults: Sass variable definitions !default flag","code":""},{"path":[]},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/brand_sass_typography.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Sass variables for brand typography — brand_sass_typography","text":"","code":"brand <- list(   typography = list(     base = list(       size = \"16px\",       \"line-height\" = 1.5     ),     headings = list(       weight = \"bold\",       style = \"normal\"     )   ) )  brand_sass_typography(brand) #> $defaults #> $defaults$brand_typography_base_size #> [1] \"1rem !default\" #>  #> $defaults$brand_typography_base_line_height #> [1] \"1.5 !default\" #>  #> $defaults$brand_typography_headings_weight #> [1] \"bold !default\" #>  #> $defaults$brand_typography_headings_style #> [1] \"normal !default\" #>  #>"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/read_brand_yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Brand instance from a Brand YAML file. — read_brand_yml","title":"Create a Brand instance from a Brand YAML file. — read_brand_yml","text":"Reads Brand YAML file finds reads _brand.yml file returns validated Brand instance.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/read_brand_yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Brand instance from a Brand YAML file. — read_brand_yml","text":"","code":"read_brand_yml(path = NULL)"},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/read_brand_yml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Brand instance from a Brand YAML file. — read_brand_yml","text":"path path brand.yml file directory _brand.yml expected found.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/read_brand_yml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Brand instance from a Brand YAML file. — read_brand_yml","text":"normalized brand_yml list brand.yml file.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/read_brand_yml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Brand instance from a Brand YAML file. — read_brand_yml","text":"default, read_brand_yml() finds project-specific _brand.yml file, looking current working directory directory parent directory _brand.yml, brand/_brand.yml _brand/_brand.yml file (variants .yaml extension). path provided, read_brand_yml() looks files provided directory; automatic discovery, read_brand_yml() starts search working directory moves upward find _brand.yml file.","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/read_brand_yml.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a Brand instance from a Brand YAML file. — read_brand_yml","text":"https://posit-dev.github.io/brand-yml/","code":""},{"path":"https://posit-dev.github.io/brand-yml/pkg/r/reference/read_brand_yml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Brand instance from a Brand YAML file. — read_brand_yml","text":"","code":"# For this example: copy a brand.yml to a temporary directory tmp_dir <- tempfile() dir.create(tmp_dir) file.copy(   system.file(\"examples/brand-posit.yml\", package = \"brand.yml\"),   file.path(tmp_dir, \"_brand.yml\") ) #> [1] TRUE  brand <- read_brand_yml(tmp_dir)"}]
