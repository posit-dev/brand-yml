# Brand { #brand_yml.Brand }

```python
Brand(self, /, **data)
```

Brand guidelines in a class.

A brand instance encapsulates the color, typography and logo preferences for
a given brand, typically found in brand guidelines created by a company's
marketing department. `brand_yml.Brand` organizes this information in a
common, fully-specified class instance that makes it easy to re-use for
theming any artifact from websites to data visualizations.

Unified brand information following the Brand YAML specification. Read brand
metadata from a YAML file, typically named `_brand.yml`, with
`brand_yml.Brand.from_yaml` or from a YAML string with
`brand_yml.Brand.from_yaml_str`. Or create a full brand instance directly
via this class.

## Attributes {.doc-section .doc-section-attributes}

meta

:   [BrandMeta](`brand_yml.meta.BrandMeta`) \| None

    Key identity information, name of the company, links to brand
    guidelines, etc.

logo

:   [BrandLogo](`brand_yml.logo.BrandLogo`) \| [BrandLogoResource](`brand_yml.logo.BrandLogoResource`) \| None

    Files or links to the brand's logo at various sizes.

color

:   [BrandColor](`brand_yml.color.BrandColor`) \| None

    Named colors in the brand's color palette and semantic colors (e.g.,
    primary, secondary, success, warning).

typography

:   [BrandTypography](`brand_yml.typography.BrandTypography`) \| None

    Font definitions, font family, weight, style, color, and line height for
    key elements (e.g., base, headings, and monospace text).

defaults

:   [dict](`dict`)\[[str](`str`), [Any](`typing.Any`)\] \| None

    Additional context-specific settings beyond the basic brand colors and
    typography.

path

:   [Path](`pathlib.Path`) \| None

    The file path of the brand configuration. This attribute is excluded
    from serialization and representation.

## Methods

| Name | Description |
| --- | --- |
| [from_yaml](#brand_yml.Brand.from_yaml) | Create a Brand instance from a Brand YAML file. |
| [from_yaml_str](#brand_yml.Brand.from_yaml_str) | Create a Brand instance from a string of YAML. |
| [model_dump_yaml](#brand_yml.Brand.model_dump_yaml) | Serialize the Brand object to YAML. |

### from_yaml { #brand_yml.Brand.from_yaml }

```python
Brand.from_yaml(path)
```

Create a Brand instance from a Brand YAML file.

Reads a Brand YAML file or finds and reads a `_brand.yml` file and
returns a validated :class:`Brand` instance.

To find a project-specific `_brand.yml` file, pass `path` the project
directory or `__file__` (the path of the current Python script).
[`brand_yml.Brand.from_yaml`](`brand_yml.Brand.from_yaml`) will look in
that directory or any parent directory for a `_brand.yml`,
`brand/_brand.yml` or `_brand/_brand.yml` file (or the same variants
with a `.yaml` extension). Note that it starts the search in the
directory passed in and moves upward to find the `_brand.yml` file; it
does not search into subdirectories of the current directory.

#### Parameters {.doc-section .doc-section-parameters}

<code><span class="parameter-name">path</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[str](`str`) \| [Path](`pathlib.Path`)</span></code>

:   The path to the brand.yml file or a directory where `_brand.yml` is
    expected to be found. Typically, you can pass `__file__` from the
    calling script to find `_brand.yml` or `_brand.yaml` in the current
    directory or any of its parent directories.

#### Returns {.doc-section .doc-section-returns}

| Name   | Type   | Description                                                                           |
|--------|--------|---------------------------------------------------------------------------------------|
|        |        | A validated `Brand` object with all fields populated according to the brand.yml file. |

#### Raises {.doc-section .doc-section-raises}

| Name   | Type                                     | Description                                                                                                                         |
|--------|------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------|
|        | [FileNotFoundError](`FileNotFoundError`) | Raises a `FileNotFoundError` if no brand configuration file is found within the given path.                                         |
|        | [ValueError](`ValueError`)               | Raises `ValueError` or other validation errors from [pydantic](https://docs.pydantic.dev/latest/) if the brand.yml file is invalid. |

#### Examples {.doc-section .doc-section-examples}

```python
from brand_yml import Brand

brand = Brand.from_yaml(__file__)
brand = Brand.from_yaml("path/to/_brand.yml")
```

### from_yaml_str { #brand_yml.Brand.from_yaml_str }

```python
Brand.from_yaml_str(text, path=None)
```

Create a Brand instance from a string of YAML.

#### Parameters {.doc-section .doc-section-parameters}

<code><span class="parameter-name">text</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[str](`str`)</span></code>

:   The text of the Brand YAML file.

<code><span class="parameter-name">path</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[str](`str`) \| [Path](`pathlib.Path`) \| None</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   The optional path on disk for supporting files like logos and fonts.

#### Returns {.doc-section .doc-section-returns}

| Name   | Type   | Description                                                                                      |
|--------|--------|--------------------------------------------------------------------------------------------------|
|        |        | A validated `brand_yml.Brand` object with all fields populated according to the Brand YAML text. |

#### Raises {.doc-section .doc-section-raises}

| Name   | Type                       | Description                                                                                                                          |
|--------|----------------------------|--------------------------------------------------------------------------------------------------------------------------------------|
|        | [ValueError](`ValueError`) | Raises `ValueError` or other validation errors from [pydantic](https://docs.pydantic.dev/latest/) if the Brand YAML file is invalid. |

#### Examples {.doc-section .doc-section-examples}

```{python}
from brand_yml import Brand

brand = Brand.from_yaml_str("""
meta:
  name: Brand YAML
color:
  primary: "#ff0202"
typography:
  base: Open Sans
""")
```

```{python}
brand.meta
```

```{python}
brand.color.primary
```

### model_dump_yaml { #brand_yml.Brand.model_dump_yaml }

```python
Brand.model_dump_yaml(stream=None, *, transform=None)
```

Serialize the Brand object to YAML.

Write the [`brand_yml.Brand`](`brand_yml.Brand`) instance to a string
or to a file on disk.

#### Examples {.doc-section .doc-section-examples}

```{python}
from brand_yml import Brand

brand = Brand.from_yaml_str("""
meta:
  name: Brand YAML
color:
  palette:
    orange: "#ff9a02"
  primary: orange
typography:
  headings: Raleway
""")
```

::: python-code-preview
```{python}
print(brand.model_dump_yaml())
```
:::

#### Parameters {.doc-section .doc-section-parameters}

<code><span class="parameter-name">stream</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Any](`typing.Any`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   Passed to `stream` parameter of
    [`ruamel.yaml.YAML.dump`](`ruamel.yaml.YAML.dump`).

<code><span class="parameter-name">transform</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Any](`typing.Any`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   Passed to `transform` parameter of
    [`ruamel.yaml.YAML.dump`](`ruamel.yaml.YAML.dump`).

#### Returns {.doc-section .doc-section-returns}

| Name   | Type                | Description                                                                                                                                                                                                                                                                                                                                                                                                            |
|--------|---------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|        | [Any](`typing.Any`) | A string with the YAML representation of the `brand` if `stream` is `None`. Otherwise, the YAML representation is written to `stream`, typically a file.  Note that the output YAML may not be 100% identical to the input `_brand.yml`. The output will contain the fully validated Brand instance where default or computed values may be included as well as any values resolved during validation, such as colors. |